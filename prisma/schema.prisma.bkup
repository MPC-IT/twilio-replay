generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   
  password  String
  fullName  String
  isAdmin   Boolean  @default(false)
  role      String   @default("user")
  suspended Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Replay {
  id           String      @id @default(uuid())
  code         String      @unique
  title        String
  startTime    DateTime?   // <-- note the name here is `startTime`, NOT `startDate`
  endTime      DateTime?   // <-- and `endTime`, NOT `endDate`
  note         String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  createdBy    String
  recordings   Recording[]
  prompts      Prompt[]
  usageRecords Usage[]
}

model Recording {
  id            String   @id @default(uuid())
  replayId      String
  name          String?
  audioUrl      String
  transcription String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  replay Replay @relation(fields: [replayId], references: [id])
}

model Prompt {
  id        String   @id @default(uuid())
  replayId  String
  type      String
  audioUrl  String
  createdAt DateTime @default(now())

  replay Replay @relation(fields: [replayId], references: [id])

  @@unique([replayId, type])
}

model Usage {
  id              String   @id @default(uuid())
  replayId        String
  callerName      String?
  callerCompany   String?
  callerPhone     String?
  durationSeconds Int
  accessedAt      DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  replay Replay @relation(fields: [replayId], references: [id])

  @@index([replayId])
}
