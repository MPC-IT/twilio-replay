generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String   @id
  name        String?
  email       String   @unique
  password    String
  role        String   @default("user")
  isAdmin     Boolean  @default(false)
  isSuspended Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  replays     Replay[]
}

model Replay {
  id        String   @id
  code      String   @unique
  codeInt   Int      @unique
  replayId  Int      @unique
  title     String
  startTime DateTime
  endTime   DateTime
  notes     String?
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [createdBy], references: [id])

  recordings Recording[]
  prompts    Prompt[]
  usages     Usage[]
}

model Recording {
  id        String   @id @default(uuid())
  replayId  Int
  label     String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  replay    Replay   @relation(fields: [replayId], references: [replayId])
}

model Prompt {
  id        String   @id @default(uuid())
  replayId  Int
  type      String
  audioUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  replay    Replay   @relation(fields: [replayId], references: [replayId])
}

model Usage {
  id                     String   @id @default(uuid())
  replayId               Int
  callerId               String
  durationSeconds        Int
  firstNameRecordingUrl  String?
  lastNameRecordingUrl   String?
  companyRecordingUrl    String?
  phoneRecordingUrl      String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  replay                 Replay   @relation(fields: [replayId], references: [replayId])
}
